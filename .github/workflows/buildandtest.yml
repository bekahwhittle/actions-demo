name: Build and Test 👷🏼‍♀️
on:
  push:
    branches:
    - main
env:
  SLACK_WEBHOOK: xxxxhJVq
jobs:
  artifacts:
    defaults:
      run:
        working-directory: "/tmp"
    runs-on: ubuntu-latest
    container:
      image: node:14.0.0
    steps:
    - name: Creating Dummy Artifacts
      run: |-
        echo "my artifact file" > /tmp/art-1;
        mkdir /tmp/artifacts;
        echo "my artifact files in a dir" > /tmp/artifacts/art-2;
    - uses: actions/upload-artifact@v3.1.1
      with:
        path: "/tmp/art-1"
    - uses: actions/upload-artifact@v3.1.1
      with:
        path: "/tmp/artifacts"
  build:
    runs-on: ubuntu-latest
    container:
      image: node:14.0.0
    steps:
    - uses: actions/checkout@v3.3.0
    - run: yarn install
    - run: CYPRESS_INSTALL_BINARY=0 yarn add cypress
  lint:
    runs-on: ubuntu-latest
    container:
      image: node:14.0.0
    needs:
    - build
    steps:
    - uses: actions/checkout@v3.3.0
    - name: restore_cache
      uses: actions/cache@v3.2.2
      with:
        key: yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
        restore-keys: |-
          yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
          yarn-packages-v1-{{ .Branch }}-
          yarn-packages-v1-
        path: "~/.cache/yarn"
    - run: yarn install
    - run: yarn lint
  test:
    runs-on: ubuntu-latest
    container:
      image: cypress/base:10
    needs:
    - build
    steps:
    - uses: actions/checkout@v3.3.0
    - name: restore_cache
      uses: actions/cache@v3.2.2
      with:
        key: yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
        restore-keys: |-
          yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
          yarn-packages-v1-{{ .Branch }}-
          yarn-packages-v1-
        path: "~/.cache/yarn"
    - run: yarn install --frozen-lockfile
    - run: yarn cypress run $CYPRESS_TEST
    - uses: actions/upload-artifact@v3.1.1
      with:
        path: "~/project/tests"
    - uses: actions/upload-artifact@v3.1.1
      with:
        path: "~/project/tests/junit.xml"
  # build-docker-image:
  #   if: github.ref == 'refs/heads/main'
  #   runs-on: ubuntu-latest
  #   needs:
  #   - test
  #   - lint
  #   env:
  #     GCLOUD_SERVICE_KEY:
  #     GOOGLE_COMPUTE_ZONE:
  #     GOOGLE_PROJECT_ID:
  #   steps:
  #   - uses: actions/checkout@v3.3.0
#     # This item has no matching transformer
#     - circleci_gcp_gcr_gcr_auth:
#     # This item has no matching transformer
#     - circleci_gcp_gcr_build_image:
#     # This item has no matching transformer
#     - circleci_gcp_gcr_push_image:
  # hold-gke-deploy:
  #   environment:
  #     name: approval
  #   runs-on: ubuntu-latest
  #   needs:
  #   - build-docker-image
  #   steps:
  #   - run: echo 'approved'
  # gke-deploy:
  #   runs-on: ubuntu-latest
  #   needs:
  #   - hold-gke-deploy
  #   env:
  #     GCLOUD_SERVICE_KEY:
  #     GOOGLE_COMPUTE_ZONE:
  #     GOOGLE_PROJECT_ID:
  #   steps:
#     # This item has no matching transformer
#     - circleci_gcp_gcr_gcr_auth:
#     # This item has no matching transformer
#     - circleci_gcp_gke_update_kubeconfig_with_credentials:
#     # This item has no matching transformer
#     - circleci_gcp_gke_rollout_image:
